{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/whatwg-fetch/fetch.js","src/feedme.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","Array","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","get","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","fetch","viewClasses","obj","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","FeedMe","node","_classCallCheck","_files","addEventListener","event","preventDefault","classList","add","remove","files","validateFiles","dataTransfer","file","addFile","console","getFilesFromMultiselect","uploadInput","document","createElement","multiple","id","appendChild","MouseEvent","window","bubbles","cancelable","dispatchEvent","guid","s4","Math","floor","random","substring","newGuid","img","Image","imgDiv","src","URL","createObjectURL","revokeObjectURL","stopPropagation","deleteFile","getFiles","data","index","clearFiles","catch","item","alert","feedme","feedMe"],"mappings":"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","file":"feedme.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","\"use strict\";\nrequire(\"whatwg-fetch\");\nclass FeedMe {\n    /**\n     * Конструктор получает на входе DOM Node и навешивает на него события\n     * dragenter, dragover, dragleave и drop\n     * @param node\n     */\n    constructor(node) {\n        this._files = {};\n        this.node = node;\n\n        let self = this;\n\n        node.addEventListener(\"dragover\", function (event) {\n            event.preventDefault();\n        });\n\n        node.addEventListener(\"dragenter\", function (event) {\n            event.preventDefault();\n            self.node.classList.add(\"something-inside\");\n        });\n        node.addEventListener(\"dragleave\", function (event) {\n            event.preventDefault();\n            self.node.classList.remove(\"something-inside\");\n        });\n        node.addEventListener(\"drop\", function (event) {\n            event.preventDefault();\n\n            let files = FeedMe.validateFiles(event.dataTransfer.files);\n\n            if (files) {\n                files.forEach(function (file) {\n                    self.addFile(file);\n                })\n            } else {\n                console.error(\"one ore more files is not valid JPG\");\n            }\n\n            self.node.classList.remove(\"something-inside\");\n\n        });\n\n        node.addEventListener(\"click\", function () {\n            self.getFilesFromMultiselect();\n        })\n    }\n\n    /**\n     * Проверяет являются ли файлы в массиве files картинками\n     * Возвращает массив с выбранными файлами если валидно,\n     * иначе возвращает false\n     *\n     * @param files\n     * @returns {Array} Array of Files\n     */\n\n    static validateFiles(files) {\n        let result = [];\n        for (let i = 0; i< files.length; i++) {\n            let item = files[i];\n            if (!(item.type === \"image/jpeg\")) {\n                console.error(\"one ore more files is not valid JPG\");\n                alert(\"Ошибка! Загружайте только JPG!\");\n                return false;\n            } else {\n                result.push(item);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Будет добавлять файл инпут и собирать с него данные\n     * о выбранных файлах\n     */\n    getFilesFromMultiselect() {\n        let self = this;\n\n        let  uploadInput = document.createElement(\"input\");\n\n        uploadInput.type = \"file\";\n\n        uploadInput.multiple = true;\n\n        uploadInput.id = \"fdrag_temp_input\";\n\n        document.body.appendChild(uploadInput);\n\n        uploadInput.addEventListener(\"change\", function () {\n            let files = FeedMe.validateFiles(uploadInput.files);\n\n            if (files) {\n                files.forEach(function (file) {\n                    self.addFile(file);\n                })\n            } else {\n                console.error(\"one ore more files is not valid JPG\");\n            }\n\n            self.node.classList.remove(\"something-inside\");\n        });\n\n        let event = new MouseEvent(\"click\", {\n            \"view\": window,\n            \"bubbles\": false,\n            \"cancelable\": true\n        });\n        uploadInput.dispatchEvent(event);\n\n        uploadInput.remove();\n    }\n\n    /**\n     * Добавляет в объект _files новый объект\n     * с uuid сгенерированным именем\n     * uuid: {file: [File object], uuid: uuid}\n     * @param file объект типа File (см. File API)\n     */\n    addFile(file) {\n        function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            return s4() + s4()  + s4()  + s4()  +\n                s4()  + s4() + s4() + s4()+\"\";\n        }\n        let self = this;\n\n        let newGuid = guid();\n\n        let img = new Image();\n        let imgDiv = document.createElement(\"div\");\n\n        img.src = URL.createObjectURL(file);\n\n        img.onload = function () {\n            URL.revokeObjectURL(this.src);\n        };\n\n        this.node.appendChild(imgDiv);\n\n        imgDiv.classList.add(\"feedme-file\");\n\n        imgDiv.appendChild(img);\n\n        imgDiv.addEventListener(\"click\", function (event) {\n            event.stopPropagation();\n            self.deleteFile(newGuid);\n        });\n\n        this._files[newGuid] = {file: file, id: newGuid, node: imgDiv};\n\n    }\n\n    /**\n     * Удаляет свойство(объект) с указанным uuid\n     * из объекта _files\n     * @param guid\n     */\n    deleteFile(guid) {\n        let self = this;\n\n        self._files[guid].node.remove();\n\n        delete self._files[guid];\n\n    }\n\n    /**\n     * возвращает свойства (файлы) объекта _files\n     * в виде массива объектов File\n     * @returns {Array}\n     */\n    getFiles() {\n        let self = this;\n        let result = [];\n        for (let file in self._files) {\n            if (self._files.hasOwnProperty(file)) {\n                result.push(self._files[file].file);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * очищает массив files и вызывает метод\n     * синхронизации\n     */\n    clearFiles() {\n        let self = this;\n\n        for (let file in self._files) {\n            if (self._files.hasOwnProperty(file)) {\n                self.deleteFile(file);\n            }\n        }\n\n    }\n\n    /**\n     * отправляет файлы методом post на заданный url\n     * @param url\n     */\n    postFilesTo(url) {\n        let self = this;\n        return new Promise(function (resolve, reject) {\n            if (self.getFiles().length>0) {\n                let data = new FormData();\n                let files = self.getFiles();\n                files.forEach(function (file, index) {\n                    data.append(\"file\"+(index+1), file);\n                });\n\n                self.node.classList.add(\"waiting\");\n\n                fetch(url, {\n                    method: \"POST\",\n                    body: data\n                }).then(function (response) {\n                    response.text().then(function(blob) {\n                        self.node.classList.remove(\"waiting\");\n                        self.clearFiles();\n                        resolve(blob);\n                    }, function (blob) {\n                        self.node.classList.remove(\"waiting\");\n                        reject(blob);\n                    });\n                }).catch(function(error) {\n                    self.node.classList.remove(\"waiting\");\n                    reject(error);\n                });\n\n            }\n        });\n\n    }\n}\nconst feedme = function (node) {\n    node.feedMe = new FeedMe(node);\n};\n\nwindow.feedMe = feedme;"]}